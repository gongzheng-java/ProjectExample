
package com.yichuan.controller.upload;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;

/**
 *
 * @Author gongzheng
 * @CreateDate 2019年3月3日 下午3:04:36
 * @Description
 */
@Controller
@RequestMapping("/upload")
public class UploadController {
	public static final String url = "E:/文件上传/";

	@RequestMapping("/fileupload")
	 public String fileupload(HttpServletRequest request,HttpServletResponse response,String loginName) throws Exception {
	     //获取服务器中保存文件的路径
	  String path = request.getSession().getServletContext().getRealPath("")+"\\upload\\record\\";
	  System.out.println(path);
	   //获取解析器  
	     CommonsMultipartResolver resolver = new CommonsMultipartResolver(request.getSession().getServletContext());  
	     //判断是否是文件  
	     if(resolver.isMultipart(request)){  
	         //进行转换  
	         MultipartHttpServletRequest multiRequest = (MultipartHttpServletRequest)(request);  
	         //获取所有文件名称  
	         Iterator<String> it = multiRequest.getFileNames();  
	         while(it.hasNext()){  
	             //根据文件名称取文件  
	             MultipartFile file = multiRequest.getFile(it.next());  
	             String fileName = file.getOriginalFilename();  
	             String localPath = url + fileName;  
	             //创建一个新的文件对象，创建时需要一个参数，参数是文件所需要保存的位置
	             File newFile = new File(localPath);  
	             if (newFile.getParentFile() != null || !newFile.getParentFile().isDirectory()) {
	                // 创建父文件夹
	                newFile.getParentFile().mkdirs();
	             }
	　　　　　　　　//上传的文件写入到指定的文件中   
	　　　　　　　　file.transferTo(newFile);
	　　　　　　}
	     }
	 }

	/*
	 * 采用spring提供的上传文件的方法
	 */
	@RequestMapping("/springUpload")
	public String springUpload(HttpServletRequest request, Model model) throws IllegalStateException, IOException {
		long startTime = System.currentTimeMillis();
		// 将当前上下文初始化给 CommonsMutipartResolver （多部分解析器）
		CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(
				request.getSession().getServletContext());
		// 检查form中是否有enctype="multipart/form-data"
		if (multipartResolver.isMultipart(request)) {
			// 将request变成多部分request
			MultipartHttpServletRequest multiRequest = (MultipartHttpServletRequest) request;
			// 获取multiRequest 中所有的文件名
			Iterator iter = multiRequest.getFileNames();

			while (iter.hasNext()) {
				// 一次遍历所有文件
				MultipartFile file = multiRequest.getFile(iter.next().toString());
				if (file != null) {
					String path = url + file.getOriginalFilename();
					// 上传
					file.transferTo(new File(path));
				}

			}

		}
		long endTime = System.currentTimeMillis();
		System.out.println("方法三的运行时间：" + String.valueOf(endTime - startTime) + "ms");
		model.addAttribute("msg3", "采用spring提供的上传文件的方法 成功！！！！");
		return "/test";
	}

}
